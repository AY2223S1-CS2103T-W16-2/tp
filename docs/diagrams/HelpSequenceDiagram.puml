@startuml
!include style.puml

box Ui UI_COLOR_T1
participant ":MainWindow" as MainWindow UI_COLOR
participant ":HelpWindow" as HelpWindow UI_COLOR
end box

box Logic LOGIC_COLOR_T1
participant ":LogicManager" as LogicManager LOGIC_COLOR
participant ":FoodRemParser" as FoodRemParser LOGIC_COLOR
participant ":HelpCommandParser" as HelpCommandParser LOGIC_COLOR
participant "t:HelpCommand" as HelpCommand LOGIC_COLOR
participant ":CommandResult" as CommandResult LOGIC_COLOR
end box

[-> MainWindow : executeCommand("help new")
activate MainWindow
MainWindow -> LogicManager : execute("help new")

activate LogicManager

LogicManager -> FoodRemParser : parseCommand("help new")
activate FoodRemParser

create HelpCommandParser
FoodRemParser -> HelpCommandParser
activate HelpCommandParser

HelpCommandParser --> FoodRemParser
deactivate HelpCommandParser

FoodRemParser -> HelpCommandParser : parse("help new")
activate HelpCommandParser

create HelpCommand
HelpCommandParser -> HelpCommand
activate HelpCommand

HelpCommand --> HelpCommandParser :
deactivate HelpCommand

HelpCommandParser --> FoodRemParser :
deactivate HelpCommandParser
'Hidden arrow to position the destroy marker below the end of the activation bar.
HelpCommandParser -[hidden]-> FoodRemParser
destroy HelpCommandParser

FoodRemParser --> LogicManager :
deactivate FoodRemParser

LogicManager -> HelpCommand : execute()
activate HelpCommand

create CommandResult
HelpCommand -> CommandResult
activate CommandResult

CommandResult --> HelpCommand
deactivate CommandResult

HelpCommand --> LogicManager : result
deactivate HelpCommand

MainWindow <--LogicManager : result
deactivate LogicManager

MainWindow --> HelpWindow : hide()
activate HelpWindow

HelpWindow --> MainWindow
deactivate HelpWindow

MainWindow --> CommandResult : getHelpText()
activate CommandResult

CommandResult --> MainWindow : helpText
deactivate CommandResult

MainWindow --> HelpWindow : setMessageToDisplay(helpText)
activate HelpWindow

HelpWindow --> MainWindow
deactivate HelpWindow

MainWindow --> MainWindow : handleHelp()
activate MainWindow

MainWindow --> HelpWindow : show()
activate HelpWindow

HelpWindow --> MainWindow
deactivate HelpWindow

MainWindow --> MainWindow
deactivate MainWindow

[<--MainWindow :commandResult
deactivate MainWindow

@enduml
